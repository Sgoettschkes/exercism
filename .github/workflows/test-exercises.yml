name: Test exercises
on:
  push:
    branches: [develop,main]
  pull_request:
    branches: [develop,main]

env:
  dart-version: '2.19.6'
  elixir-version: '1.15.6'
  erlang-version: '26.1'
  ghc-version: '8.10.7'
  gleam-version: '0.31.0'
  lua-version: '5.4.6'
  lua-rocks-version: '3.9.2'
  node-version: '18.18.0'
  rebar3-version: '3.22.1'
  stack-version: '2.13.1'
  zig-version: '0.11.0'

jobs:
  test-dart:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            ^dart/
            dart-tests.sh
          since_last_remote_commit: 'true'
      - name: "Setup Dart"
        uses: dart-lang/setup-dart@v1
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          sdk: ${{ env.dart-version }}
      - name: "Run tests"
        if: steps.changed-files.outputs.any_changed == 'true'
        run: bash dart-tests.sh
        shell: bash
  test-elixir:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            ^elixir/
            elixir-tests.sh
          since_last_remote_commit: 'true'
      - name: "Setup BEAM"
        uses: erlef/setup-beam@v1
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          otp-version: ${{ env.erlang-version }}
          elixir-version: ${{ env.elixir-version }}
      - name: "Run tests"
        if: steps.changed-files.outputs.any_changed == 'true'
        run: bash elixir-tests.sh
        shell: bash
  test-gleam:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            ^gleam/
            gleam-tests.sh
          since_last_remote_commit: 'true'
      - name: "Setup BEAM"
        uses: erlef/setup-beam@v1
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          otp-version: ${{ env.erlang-version }}
          rebar3-version: ${{ env.rebar3-version }}
      - name: "Setup Glam"
        uses: gleam-lang/setup-gleam@v1.0.1
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          gleam-version: ${{ env.gleam-version }}
      - name: "Run tests"
        if: steps.changed-files.outputs.any_changed == 'true'
        run: bash gleam-tests.sh
        shell: bash
  test-haskell:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            ^haskell/
            haskell-tests.sh
          since_last_remote_commit: 'true'
      - name: "Caching"
        uses: actions/cache@v3
        # if: steps.changed-files.outputs.any_changed == 'true'
        with:
          path: |
            ~/.stack
            haskell/*/.stack-work
          key: ${{ runner.os }}-${{ env.ghc-version }}-${{ env.stack-version }}-stack
      - name: "Setup GHC"
        uses: haskell-actions/setup@v2
        # if: steps.changed-files.outputs.any_changed == 'true'
        with:
          ghc-version: ${{ env.ghc-version }}
          enable-stack: true
          stack-version: ${{ env.stack-version }}
      - name: "Run tests"
        # if: steps.changed-files.outputs.any_changed == 'true'
        run: bash haskell-tests.sh
        shell: bash
  test-javascript:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            ^javascript/
            javascript-tests.sh
          since_last_remote_commit: 'true'
      - name: "Setup Node"
        uses: actions/setup-node@v2
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          node-version: ${{ env.node-version }}
      - name: "Run tests"
        if: steps.changed-files.outputs.any_changed == 'true'
        run: bash javascript-tests.sh
        shell: bash
  test-lua:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            ^lua/
            lua-tests.sh
          since_last_remote_commit: 'true'
      - name: "Setup Lua"
        uses: leafo/gh-actions-lua@v8.0.0
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          luaVersion: ${{ env.lua-version }}
      - name: "Setup LuaRocks"
        uses: leafo/gh-actions-luarocks@v4
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          luarocksVersion: ${{ env.lua-rocks-version }}
      - name: "Install busted and build"
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          luarocks install busted
          luarocks install luacheck
      - name: "Run tests"
        if: steps.changed-files.outputs.any_changed == 'true'
        run: bash lua-tests.sh
        shell: bash
  test-rust:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            ^rust/
            rust-tests.sh
          since_last_remote_commit: 'true'
      - name: "Run tests"
        if: steps.changed-files.outputs.any_changed == 'true'
        run: bash rust-tests.sh
        shell: bash
  test-zig:
    runs-on: ubuntu-22.04
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get specific changed files
        id: changed-files
        uses: tj-actions/changed-files@v2.0.0
        with:
          files: |
            ^zig/
            zig-tests.sh
          since_last_remote_commit: 'true'
      - name: "Setup zig"
        uses: goto-bus-stop/setup-zig@v2
        if: steps.changed-files.outputs.any_changed == 'true'
        with:
          version: ${{ env.zig-version }}
      - name: "Run tests"
        if: steps.changed-files.outputs.any_changed == 'true'
        run: bash zig-tests.sh
        shell: bash
